# File: .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  IMAGE_NAME: rust-workshop-jumpbox

jobs:
  build:
    runs-on: ubuntu-24.04  # Uses GitHub-hosted runner
    outputs:
      image_tag: ${{ steps.variables.outputs.image_tag }}
      env: ${{ steps.variables.outputs.env }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up variables
        id: variables
        run: |
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            echo "ref_tag=dev-${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            echo "env=uat" >> $GITHUB_OUTPUT
            echo "image_tag=uat-$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
            echo "repo=miw1513/k8s-deployment" >> $GITHUB_OUTPUT
            echo "path_repo=k8s-deployment" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_EVENT_NAME == "push" && $GITHUB_REF == "refs/tags/"* ]]; then
            echo "image_tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            echo "ref_tag=uat-${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            echo "env=prd" >> $GITHUB_OUTPUT
            echo "repo=miw1513/k8s-deployment-prd" >> $GITHUB_OUTPUT
            echo "path_repo=k8s-deployment-prd" >> $GITHUB_OUTPUT
          else
            echo "image_tag=dev-$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
            echo "env=dev" >> $GITHUB_OUTPUT
            echo "repo=miw1513/k8s-deployment" >> $GITHUB_OUTPUT
            echo "path_repo=k8s-deployment" >> $GITHUB_OUTPUT
          fi

      - name: Build Rust and Push (Develop)
        if: ${{ github.ref == 'refs/heads/develop'  }}
        env:
          USER_DOCKER: ${{ secrets.USER_DOCKER }}
          PASS_DOCKER: ${{ secrets.PASS_DOCKER }}
          TAG: ${{ steps.variables.outputs.image_tag }}
        run: |
          echo $PASS_DOCKER | docker login -u $USER_DOCKER --password-stdin
          docker build -t $USER_DOCKER/${{ env.IMAGE_NAME }}:$TAG .  
          docker push $USER_DOCKER/${{ env.IMAGE_NAME }}:$TAG

      - name: Retag Rust and Push (Uat & Production)
        if: ${{ github.ref == 'refs/heads/main'  }}
        env:
          USER_DOCKER: ${{ secrets.USER_DOCKER }}
          PASS_DOCKER: ${{ secrets.PASS_DOCKER }}
          TAG: ${{ steps.variables.outputs.image_tag }}
        run: |
          echo $PASS_DOCKER | docker login -u $USER_DOCKER --password-stdin
          docker pull $USER_DOCKER/${{ env.IMAGE_NAME }}:${{ steps.variables.outputs.ref_tag }}
          docker tag $USER_DOCKER/${{ env.IMAGE_NAME }}:${{ steps.variables.outputs.ref_tag }} $USER_DOCKER/${{ env.IMAGE_NAME }}:$TAG
          docker push $USER_DOCKER/${{ env.IMAGE_NAME }}:$TAG

  trigger:
    needs: build
    if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push' }}
    name: Update Tag and Deploy
    runs-on: ubuntu-24.04  # Uses GitHub-hosted runner
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Check out my other private repo
        uses: actions/checkout@v4
        with:
          repository: ${{ needs.build.outputs.repo }}
          token: ${{ secrets.AUTH_GIT }}
          path: ${{ needs.build.outputs.repo_path }}
          ref: main


      
      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.33.2
        env:
          IMAGE: ${{ secrets.USER_DOCKER }}/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.image_tag }}
          PATH: ${{ needs.build.outputs.repo_path }}/rust-app/rust-app-deployment.yaml
        with:
         cmd: yq -i '.spec.template.spec.containers[0].image = strenv(IMAGE) ' 'strenv(PATH)'
          

      - name: Update repository
        working-directory: ${{ needs.build.outputs.repo_path }}
        run: |-
          git config --global user.email "support@dependabot.com"
          git config --global user.name "dependabot[bot]"
          git add .
          git commit -am "release: ${{ env.IMAGE_NAME }} env: ${{ needs.build.outputs.env }} version: ${{ needs.build.outputs.image_tag }}"
          git push origin main


